- hosts: localhost
  vars_prompt:
  - name: "tld"
    prompt: "The top level domain under which subdomains are installed"
    private: no
  - name: "custom_name"
    prompt: "Publish to your own top level domain (if you have a custom domain)"
    private: no
    default: "no"
  - name: "subdomain"
    prompt: "The subdomain you want to publish on"
    private: no
  - name: "url_to_fetch"
    prompt: "The url to fetch and save (starting with http/s)"
    private: no
    default: "https://example.com"

  vars:
    aws_tld: "s3-website.eu-central-1.amazonaws.com"
    # aws_region: "{{ lookup('env', 'aws_default_region') }}"
    aws_region: "eu-central-1"
    cloudflare_email: "{{ lookup('env','cloudflare_email') }}"
    cloudflare_token: "{{ lookup('env','cloudflare_token') }}"


  tasks:
    - set_fact: canonical_domain={{custom_name}}
      when: custom_name != "no"
      tags:
        - setup
    - set_fact: canonical_domain={{subdomain}}.appt.guru
      when: custom_name == "no"
      tags:
        - setup
    - debug: msg="Going to publish to {{canonical_domain}} in region {{aws_region}}"
      tags:
        - setup

    - debug: msg="node ssg.js {{url_to_fetch}}"

    - name: Generate site
      command: "node ssg.js {{url_to_fetch}}"

    - name: Ensure s3 bucket exists
      s3_bucket:
        name: "{{canonical_domain}}"
        state: present
        region: "{{aws_region}}"

    - name: Configure bucket as a website
      s3_website:
        name: "{{canonical_domain}}"
        state: present
        region: "{{aws_region}}"

    - name: "[if custom domain] Redirect subdomain to custom domain"
      s3_website:
        name: "{{subdomain}}.{{tld}}"
        redirect_all_requests: "{{custom_name}}"
        state: present
        region: "{{aws_region}}"
      when: custom_name|bool

    - name: Upload site
      aws_s3:
        bucket: "{{canonical_domain}}"
        object: "index.html"
        src: "outputs/index.html"
        mode: put
        permission: "public-read"
        region: "{{aws_region}}"

    - name: point DNS at site
      cloudflare_dns:
        zone: appt.guru
        type: CNAME
        name: "{{subdomain}}"
        value: "{{canonical_domain}}.s3-website.{{aws_region}}.amazonaws.com"
        proxied: yes
        account_email: "{{cloudflare_email}}"
        account_api_token: "{{cloudflare_token}}"
        state: present
      tags:
        - dns

    - debug: msg="Site available at {{canonical_domain}}"